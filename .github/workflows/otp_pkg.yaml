name: OTP package generation

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:
  repository_dispatch:
    types:
      - new-otp-release

# ${{ github.event.client_payload.otp }}

jobs:
    otp-gen-matrix:
      runs-on: ubuntu-latest
      container:
        # This image is based on debian:bookworm
        # but we need to make  erlef/setup-beam@v1 happy
        # so we set 'ubuntu22' (jammy), which is the most similar, as ImageOS
        image: grisp/grisp2-rtems-toolchain
        env:
          ImageOS: 'ubuntu22'
      strategy:
        matrix:
          otp: ['27.0']
          deps: ['grisp', 'grisp, grisp_cryptoauth']
          rebar3: ['3']
      steps:
        - uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            rebar3-version: ${{ matrix.rebar3 }}
        - name: Install GRiSP Plugin
          run: |
            mkdir -p ${HOME}/.config/rebar3/
            echo "{plugins, [rebar3_hex,rebar3_grisp]}." > ${HOME}/.config/rebar3/rebar.config
            rebar3
        - name: Generate Dummy Project
          run: |
            rebar3 grisp configure -i false --otp_version="${{matrix.otp}}" --dest="_deploy"
            mkdir robot/_deploy
            sed -i 's/grisp/${{matrix.deps}}/g' robot/src/robot.app.src
            sed -i '/{deps, \[/,/\]}.*/{
            N
            N
            s/{deps, \[\n[[:space:]]*grisp\n\]}.*/{deps, [${{matrix.deps}}]}./
            }' robot/rebar.config
            cat robot/rebar.config
        - name: Try to Deploy
          id: deploy
          continue-on-error: true
          working-directory: robot
          run: |
            rebar3 grisp deploy
        - name: Build OTP
          id: build
          if: ${{ steps.deploy.outcome == 'failure' }}
          working-directory: robot
          run: |
            sed -i '/{grisp, \[/a\
            '"{build, [{toolchain, [{directory, \"/grisp2-rtems-toolchain\"}]}]}," rebar.config
            cat rebar.config
            rebar3 grisp build --tar
            PKG_NAME=$(ls _grisp/grisp2/otp/${{matrix.otp}}/package)
            echo "pkg_name=$PKG_NAME" >> $GITHUB_ENV
        - name: Upload OTP Artifact
          if: ${{ steps.build.outcome == 'success' }}
          uses: actions/upload-artifact@v4
          with:
            name: ${{ env.pkg_name }}
            path: robot/_grisp/grisp2/otp/${{matrix.otp}}/package/grisp_otp_build_${{matrix.otp}}_*.tar.gz
